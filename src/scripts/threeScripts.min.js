Detector={canvas:!!window.CanvasRenderingContext2D,webgl:function(){try{return!!window.WebGLRenderingContext&&!!document.createElement("canvas").getContext("experimental-webgl")}catch(e){return!1}}(),workers:!!window.Worker,fileapi:window.File&&window.FileReader&&window.FileList&&window.Blob,getWebGLErrorMessage:function(){var e=document.createElement("div");return e.id="webgl-error-message",e.style.fontFamily="monospace",e.style.fontSize="13px",e.style.fontWeight="normal",e.style.textAlign="center",e.style.background="#fff",e.style.color="#000",e.style.padding="1.5em",e.style.width="400px",e.style.margin="5em auto 0",this.webgl||(e.innerHTML=window.WebGLRenderingContext?['Your graphics card does not seem to support <a href="http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation" style="color:#000">WebGL</a>.<br />','Find out how to get it <a href="http://get.webgl.org/" style="color:#000">here</a>.'].join("\n"):['Your browser does not seem to support <a href="http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation" style="color:#000">WebGL</a>.<br/>','Find out how to get it <a href="http://get.webgl.org/" style="color:#000">here</a>.'].join("\n")),e},addGetWebGLMessage:function(e){var t,n,o;t=void 0!==(e=e||{}).parent?e.parent:document.body,n=void 0!==e.id?e.id:"oldie",(o=Detector.getWebGLErrorMessage()).id=n,t.appendChild(o)}},THREE.DragControls=function(e,t,n){function o(){n.addEventListener("mousemove",a,!1),n.addEventListener("mousedown",s,!1),n.addEventListener("mouseup",i,!1)}function r(){n.removeEventListener("mousemove",a,!1),n.removeEventListener("mousedown",s,!1),n.removeEventListener("mouseup",i,!1)}function a(o){if(o.preventDefault(),d.x=o.clientX/n.clientWidth*2-1,d.y=-o.clientY/n.clientHeight*2+1,l.setFromCamera(d,t),m&&v.enabled)return l.ray.intersectPlane(u,E)&&m.position.copy(E.sub(h)),void v.dispatchEvent({type:"drag",object:m});l.setFromCamera(d,t);var r=l.intersectObjects(e);if(r.length>0){var a=r[0].object;u.setFromNormalAndCoplanarPoint(t.getWorldDirection(u.normal),a.position),f!==a&&(v.dispatchEvent({type:"hoveron",object:a}),n.style.cursor="pointer",f=a)}else null!==f&&(v.dispatchEvent({type:"hoveroff",object:f}),n.style.cursor="auto",f=null)}function s(o){o.preventDefault(),l.setFromCamera(d,t);var r=l.intersectObjects(e);r.length>0&&(m=r[0].object,l.ray.intersectPlane(u,E)&&h.copy(E).sub(m.position),n.style.cursor="move",v.dispatchEvent({type:"dragstart",object:m}))}function i(e){e.preventDefault(),m&&(v.dispatchEvent({type:"dragend",object:m}),m=null),n.style.cursor="auto"}if(e instanceof THREE.Camera){console.warn("THREE.DragControls: Constructor now expects ( objects, camera, domElement )");var c=e;e=t,t=c}var u=new THREE.Plane,l=new THREE.Raycaster,d=new THREE.Vector2,h=new THREE.Vector3,E=new THREE.Vector3,m=null,f=null,v=this;o(),this.enabled=!0,this.activate=o,this.deactivate=r,this.dispose=function(){r()},this.setObjects=function(){console.error("THREE.DragControls: setObjects() has been removed.")},this.on=function(e,t){console.warn("THREE.DragControls: on() has been deprecated. Use addEventListener() instead."),v.addEventListener(e,t)},this.off=function(e,t){console.warn("THREE.DragControls: off() has been deprecated. Use removeEventListener() instead."),v.removeEventListener(e,t)},this.notify=function(e){console.error("THREE.DragControls: notify() has been deprecated. Use dispatchEvent() instead."),v.dispatchEvent({type:e})}},THREE.DragControls.prototype=Object.create(THREE.EventDispatcher.prototype),THREE.DragControls.prototype.constructor=THREE.DragControls,THREE.OrbitControls=function(e,t){function n(){return 2*Math.PI/60/60*S.autoRotateSpeed}function o(){return Math.pow(.95,S.zoomSpeed)}function r(e){V.theta-=e}function a(e){V.phi-=e}function s(e){S.object instanceof THREE.PerspectiveCamera?G/=e:S.object instanceof THREE.OrthographicCamera?(S.object.zoom=Math.max(S.minZoom,Math.min(S.maxZoom,S.object.zoom*e)),S.object.updateProjectionMatrix(),I=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),S.enableZoom=!1)}function i(e){S.object instanceof THREE.PerspectiveCamera?G*=e:S.object instanceof THREE.OrthographicCamera?(S.object.zoom=Math.max(S.minZoom,Math.min(S.maxZoom,S.object.zoom/e)),S.object.updateProjectionMatrix(),I=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),S.enableZoom=!1)}function c(e){Y.set(e.clientX,e.clientY)}function u(e){Q.set(e.clientX,e.clientY)}function l(e){X.set(e.clientX,e.clientY)}function d(e){W.set(e.clientX,e.clientY),Z.subVectors(W,Y);var t=S.domElement===document?S.domElement.body:S.domElement;r(2*Math.PI*Z.x/t.clientWidth*S.rotateSpeed),a(2*Math.PI*Z.y/t.clientHeight*S.rotateSpeed),Y.copy(W),S.update()}function h(e){J.set(e.clientX,e.clientY),$.subVectors(J,Q),$.y>0?s(o()):$.y<0&&i(o()),Q.copy(J),S.update()}function E(e){q.set(e.clientX,e.clientY),K.subVectors(q,X),ne(K.x,K.y),X.copy(q),S.update()}function m(e){}function f(e){e.deltaY<0?i(o()):e.deltaY>0&&s(o()),S.update()}function v(e){switch(e.keyCode){case S.keys.UP:ne(0,S.keyPanSpeed),S.update();break;case S.keys.BOTTOM:ne(0,-S.keyPanSpeed),S.update();break;case S.keys.LEFT:ne(S.keyPanSpeed,0),S.update();break;case S.keys.RIGHT:ne(-S.keyPanSpeed,0),S.update()}}function p(e){Y.set(e.touches[0].pageX,e.touches[0].pageY)}function b(e){var t=e.touches[0].pageX-e.touches[1].pageX,n=e.touches[0].pageY-e.touches[1].pageY,o=Math.sqrt(t*t+n*n);Q.set(0,o)}function g(e){X.set(e.touches[0].pageX,e.touches[0].pageY)}function T(e){W.set(e.touches[0].pageX,e.touches[0].pageY),Z.subVectors(W,Y);var t=S.domElement===document?S.domElement.body:S.domElement;r(2*Math.PI*Z.x/t.clientWidth*S.rotateSpeed),a(2*Math.PI*Z.y/t.clientHeight*S.rotateSpeed),Y.copy(W),S.update()}function R(e){var t=e.touches[0].pageX-e.touches[1].pageX,n=e.touches[0].pageY-e.touches[1].pageY,r=Math.sqrt(t*t+n*n);J.set(0,r),$.subVectors(J,Q),$.y>0?i(o()):$.y<0&&s(o()),Q.copy(J),S.update()}function y(e){q.set(e.touches[0].pageX,e.touches[0].pageY),K.subVectors(q,X),ne(K.x,K.y),X.copy(q),S.update()}function H(e){}function x(e){if(!1!==S.enabled){switch(e.preventDefault(),e.button){case S.mouseButtons.ORBIT:if(!1===S.enableRotate)return;c(e),A=k.ROTATE;break;case S.mouseButtons.ZOOM:if(!1===S.enableZoom)return;u(e),A=k.DOLLY;break;case S.mouseButtons.PAN:if(!1===S.enablePan)return;l(e),A=k.PAN}A!==k.NONE&&(document.addEventListener("mousemove",w,!1),document.addEventListener("mouseup",D,!1),S.dispatchEvent(F))}}function w(e){if(!1!==S.enabled)switch(e.preventDefault(),A){case k.ROTATE:if(!1===S.enableRotate)return;d(e);break;case k.DOLLY:if(!1===S.enableZoom)return;h(e);break;case k.PAN:if(!1===S.enablePan)return;E(e)}}function D(e){!1!==S.enabled&&(m(e),document.removeEventListener("mousemove",w,!1),document.removeEventListener("mouseup",D,!1),S.dispatchEvent(_),A=k.NONE)}function P(e){!1===S.enabled||!1===S.enableZoom||A!==k.NONE&&A!==k.ROTATE||(e.preventDefault(),e.stopPropagation(),f(e),S.dispatchEvent(F),S.dispatchEvent(_))}function C(e){!1!==S.enabled&&!1!==S.enableKeys&&!1!==S.enablePan&&v(e)}function O(e){if(!1!==S.enabled){switch(e.touches.length){case 1:if(!1===S.enableRotate)return;p(e),A=k.TOUCH_ROTATE;break;case 2:if(!1===S.enableZoom)return;b(e),A=k.TOUCH_DOLLY;break;case 3:if(!1===S.enablePan)return;g(e),A=k.TOUCH_PAN;break;default:A=k.NONE}A!==k.NONE&&S.dispatchEvent(F)}}function U(e){if(!1!==S.enabled)switch(e.preventDefault(),e.stopPropagation(),e.touches.length){case 1:if(!1===S.enableRotate)return;if(A!==k.TOUCH_ROTATE)return;T(e);break;case 2:if(!1===S.enableZoom)return;if(A!==k.TOUCH_DOLLY)return;R(e);break;case 3:if(!1===S.enablePan)return;if(A!==k.TOUCH_PAN)return;y(e);break;default:A=k.NONE}}function M(e){!1!==S.enabled&&(H(e),S.dispatchEvent(_),A=k.NONE)}function j(e){!1!==S.enabled&&e.preventDefault()}this.object=e,this.domElement=void 0!==t?t:document,this.enabled=!0,this.target=new THREE.Vector3,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.25,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.keyPanSpeed=7,this.autoRotate=!1,this.autoRotateSpeed=2,this.enableKeys=!0,this.keys={LEFT:37,UP:38,RIGHT:39,BOTTOM:40},this.mouseButtons={ORBIT:THREE.MOUSE.LEFT,ZOOM:THREE.MOUSE.MIDDLE,PAN:THREE.MOUSE.RIGHT},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this.getPolarAngle=function(){return z.phi},this.getAzimuthalAngle=function(){return z.theta},this.saveState=function(){S.target0.copy(S.target),S.position0.copy(S.object.position),S.zoom0=S.object.zoom},this.reset=function(){S.target.copy(S.target0),S.object.position.copy(S.position0),S.object.zoom=S.zoom0,S.object.updateProjectionMatrix(),S.dispatchEvent(L),S.update(),A=k.NONE},this.update=function(){var t=new THREE.Vector3,o=(new THREE.Quaternion).setFromUnitVectors(e.up,new THREE.Vector3(0,1,0)),a=o.clone().inverse(),s=new THREE.Vector3,i=new THREE.Quaternion;return function(){var e=S.object.position;return t.copy(e).sub(S.target),t.applyQuaternion(o),z.setFromVector3(t),S.autoRotate&&A===k.NONE&&r(n()),z.theta+=V.theta,z.phi+=V.phi,z.theta=Math.max(S.minAzimuthAngle,Math.min(S.maxAzimuthAngle,z.theta)),z.phi=Math.max(S.minPolarAngle,Math.min(S.maxPolarAngle,z.phi)),z.makeSafe(),z.radius*=G,z.radius=Math.max(S.minDistance,Math.min(S.maxDistance,z.radius)),S.target.add(B),t.setFromSpherical(z),t.applyQuaternion(a),e.copy(S.target).add(t),S.object.lookAt(S.target),!0===S.enableDamping?(V.theta*=1-S.dampingFactor,V.phi*=1-S.dampingFactor):V.set(0,0,0),G=1,B.set(0,0,0),!!(I||s.distanceToSquared(S.object.position)>N||8*(1-i.dot(S.object.quaternion))>N)&&(S.dispatchEvent(L),s.copy(S.object.position),i.copy(S.object.quaternion),I=!1,!0)}}(),this.dispose=function(){S.domElement.removeEventListener("contextmenu",j,!1),S.domElement.removeEventListener("mousedown",x,!1),S.domElement.removeEventListener("wheel",P,!1),S.domElement.removeEventListener("touchstart",O,!1),S.domElement.removeEventListener("touchend",M,!1),S.domElement.removeEventListener("touchmove",U,!1),document.removeEventListener("mousemove",w,!1),document.removeEventListener("mouseup",D,!1),window.removeEventListener("keydown",C,!1)};var S=this,L={type:"change"},F={type:"start"},_={type:"end"},k={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_DOLLY:4,TOUCH_PAN:5},A=k.NONE,N=1e-6,z=new THREE.Spherical,V=new THREE.Spherical,G=1,B=new THREE.Vector3,I=!1,Y=new THREE.Vector2,W=new THREE.Vector2,Z=new THREE.Vector2,X=new THREE.Vector2,q=new THREE.Vector2,K=new THREE.Vector2,Q=new THREE.Vector2,J=new THREE.Vector2,$=new THREE.Vector2,ee=function(){var e=new THREE.Vector3;return function(t,n){e.setFromMatrixColumn(n,0),e.multiplyScalar(-t),B.add(e)}}(),te=function(){var e=new THREE.Vector3;return function(t,n){e.setFromMatrixColumn(n,1),e.multiplyScalar(t),B.add(e)}}(),ne=function(){var e=new THREE.Vector3;return function(t,n){var o=S.domElement===document?S.domElement.body:S.domElement;if(S.object instanceof THREE.PerspectiveCamera){var r=S.object.position;e.copy(r).sub(S.target);var a=e.length();a*=Math.tan(S.object.fov/2*Math.PI/180),ee(2*t*a/o.clientHeight,S.object.matrix),te(2*n*a/o.clientHeight,S.object.matrix)}else S.object instanceof THREE.OrthographicCamera?(ee(t*(S.object.right-S.object.left)/S.object.zoom/o.clientWidth,S.object.matrix),te(n*(S.object.top-S.object.bottom)/S.object.zoom/o.clientHeight,S.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),S.enablePan=!1)}}();S.domElement.addEventListener("contextmenu",j,!1),S.domElement.addEventListener("mousedown",x,!1),S.domElement.addEventListener("wheel",P,!1),S.domElement.addEventListener("touchstart",O,!1),S.domElement.addEventListener("touchend",M,!1),S.domElement.addEventListener("touchmove",U,!1),window.addEventListener("keydown",C,!1),this.update()},THREE.OrbitControls.prototype=Object.create(THREE.EventDispatcher.prototype),THREE.OrbitControls.prototype.constructor=THREE.OrbitControls,Object.defineProperties(THREE.OrbitControls.prototype,{center:{get:function(){return console.warn("THREE.OrbitControls: .center has been renamed to .target"),this.target}},noZoom:{get:function(){return console.warn("THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead."),!this.enableZoom},set:function(e){console.warn("THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead."),this.enableZoom=!e}},noRotate:{get:function(){return console.warn("THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead."),!this.enableRotate},set:function(e){console.warn("THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead."),this.enableRotate=!e}},noPan:{get:function(){return console.warn("THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead."),!this.enablePan},set:function(e){console.warn("THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead."),this.enablePan=!e}},noKeys:{get:function(){return console.warn("THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead."),!this.enableKeys},set:function(e){console.warn("THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead."),this.enableKeys=!e}},staticMoving:{get:function(){return console.warn("THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead."),!this.enableDamping},set:function(e){console.warn("THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead."),this.enableDamping=!e}},dynamicDampingFactor:{get:function(){return console.warn("THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead."),this.dampingFactor},set:function(e){console.warn("THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead."),this.dampingFactor=e}}}),THREE.EffectComposer=function(e,t){if(this.renderer=e,void 0===t){var n={minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBAFormat,stencilBuffer:!1},o=e.getSize();(t=new THREE.WebGLRenderTarget(o.width,o.height,n)).texture.name="EffectComposer.rt1"}this.renderTarget1=t,this.renderTarget2=t.clone(),this.renderTarget2.texture.name="EffectComposer.rt2",this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2,this.passes=[],void 0===THREE.CopyShader&&console.error("THREE.EffectComposer relies on THREE.CopyShader"),void 0===THREE.ShaderPass&&console.error("THREE.EffectComposer relies on THREE.ShaderPass"),this.copyPass=new THREE.ShaderPass(THREE.CopyShader)},Object.assign(THREE.EffectComposer.prototype,{swapBuffers:function(){var e=this.readBuffer;this.readBuffer=this.writeBuffer,this.writeBuffer=e},addPass:function(e){this.passes.push(e);var t=this.renderer.getSize();e.setSize(t.width,t.height)},insertPass:function(e,t){this.passes.splice(t,0,e)},render:function(e){var t,n,o=!1,r=this.passes.length;for(n=0;n<r;n++)if(!1!==(t=this.passes[n]).enabled){if(t.render(this.renderer,this.writeBuffer,this.readBuffer,e,o),t.needsSwap){if(o){var a=this.renderer.context;a.stencilFunc(a.NOTEQUAL,1,4294967295),this.copyPass.render(this.renderer,this.writeBuffer,this.readBuffer,e),a.stencilFunc(a.EQUAL,1,4294967295)}this.swapBuffers()}void 0!==THREE.MaskPass&&(t instanceof THREE.MaskPass?o=!0:t instanceof THREE.ClearMaskPass&&(o=!1))}},reset:function(e){if(void 0===e){var t=this.renderer.getSize();(e=this.renderTarget1.clone()).setSize(t.width,t.height)}this.renderTarget1.dispose(),this.renderTarget2.dispose(),this.renderTarget1=e,this.renderTarget2=e.clone(),this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2},setSize:function(e,t){this.renderTarget1.setSize(e,t),this.renderTarget2.setSize(e,t);for(var n=0;n<this.passes.length;n++)this.passes[n].setSize(e,t)}}),THREE.Pass=function(){this.enabled=!0,this.needsSwap=!0,this.clear=!1,this.renderToScreen=!1},Object.assign(THREE.Pass.prototype,{setSize:function(e,t){},render:function(e,t,n,o,r){console.error("THREE.Pass: .render() must be implemented in derived pass.")}}),THREE.GlitchPass=function(e){THREE.Pass.call(this),void 0===THREE.DigitalGlitch&&console.error("THREE.GlitchPass relies on THREE.DigitalGlitch");var t=THREE.DigitalGlitch;this.uniforms=THREE.UniformsUtils.clone(t.uniforms),void 0==e&&(e=64),this.uniforms.tDisp.value=this.generateHeightmap(e),this.material=new THREE.ShaderMaterial({uniforms:this.uniforms,vertexShader:t.vertexShader,fragmentShader:t.fragmentShader}),this.camera=new THREE.OrthographicCamera(-1,1,1,-1,0,1),this.scene=new THREE.Scene,this.quad=new THREE.Mesh(new THREE.PlaneBufferGeometry(2,2),null),this.quad.frustumCulled=!1,this.scene.add(this.quad),this.goWild=!1,this.curF=0,this.generateTrigger()},THREE.GlitchPass.prototype=Object.assign(Object.create(THREE.Pass.prototype),{constructor:THREE.GlitchPass,render:function(e,t,n,o,r){this.uniforms.tDiffuse.value=n.texture,this.uniforms.seed.value=Math.random(),this.uniforms.byp.value=0,this.curF%this.randX==0||1==this.goWild?(this.uniforms.amount.value=Math.random()/30,this.uniforms.angle.value=THREE.Math.randFloat(-Math.PI,Math.PI),this.uniforms.seed_x.value=THREE.Math.randFloat(-1,1),this.uniforms.seed_y.value=THREE.Math.randFloat(-1,1),this.uniforms.distortion_x.value=THREE.Math.randFloat(0,1),this.uniforms.distortion_y.value=THREE.Math.randFloat(0,1),this.curF=0,this.generateTrigger()):this.curF%this.randX<this.randX/5?(this.uniforms.amount.value=Math.random()/90,this.uniforms.angle.value=THREE.Math.randFloat(-Math.PI,Math.PI),this.uniforms.distortion_x.value=THREE.Math.randFloat(0,1),this.uniforms.distortion_y.value=THREE.Math.randFloat(0,1),this.uniforms.seed_x.value=THREE.Math.randFloat(-.3,.3),this.uniforms.seed_y.value=THREE.Math.randFloat(-.3,.3)):0==this.goWild&&(this.uniforms.byp.value=1),this.curF++,this.quad.material=this.material,this.renderToScreen?e.render(this.scene,this.camera):e.render(this.scene,this.camera,t,this.clear)},generateTrigger:function(){this.randX=THREE.Math.randInt(120,240)},generateHeightmap:function(e){for(var t=new Float32Array(e*e*3),n=e*e,o=0;o<n;o++){var r=THREE.Math.randFloat(0,1);t[3*o+0]=r,t[3*o+1]=r,t[3*o+2]=r}var a=new THREE.DataTexture(t,e,e,THREE.RGBFormat,THREE.FloatType);return a.needsUpdate=!0,a}}),THREE.MaskPass=function(e,t){THREE.Pass.call(this),this.scene=e,this.camera=t,this.clear=!0,this.needsSwap=!1,this.inverse=!1},THREE.MaskPass.prototype=Object.assign(Object.create(THREE.Pass.prototype),{constructor:THREE.MaskPass,render:function(e,t,n,o,r){var a=e.context,s=e.state;s.buffers.color.setMask(!1),s.buffers.depth.setMask(!1),s.buffers.color.setLocked(!0),s.buffers.depth.setLocked(!0);var i,c;this.inverse?(i=0,c=1):(i=1,c=0),s.buffers.stencil.setTest(!0),s.buffers.stencil.setOp(a.REPLACE,a.REPLACE,a.REPLACE),s.buffers.stencil.setFunc(a.ALWAYS,i,4294967295),s.buffers.stencil.setClear(c),e.render(this.scene,this.camera,n,this.clear),e.render(this.scene,this.camera,t,this.clear),s.buffers.color.setLocked(!1),s.buffers.depth.setLocked(!1),s.buffers.stencil.setFunc(a.EQUAL,1,4294967295),s.buffers.stencil.setOp(a.KEEP,a.KEEP,a.KEEP)}}),THREE.ClearMaskPass=function(){THREE.Pass.call(this),this.needsSwap=!1},THREE.ClearMaskPass.prototype=Object.create(THREE.Pass.prototype),Object.assign(THREE.ClearMaskPass.prototype,{render:function(e,t,n,o,r){e.state.buffers.stencil.setTest(!1)}}),THREE.RenderPass=function(e,t,n,o,r){THREE.Pass.call(this),this.scene=e,this.camera=t,this.overrideMaterial=n,this.clearColor=o,this.clearAlpha=void 0!==r?r:0,this.clear=!0,this.clearDepth=!1,this.needsSwap=!1},THREE.RenderPass.prototype=Object.assign(Object.create(THREE.Pass.prototype),{constructor:THREE.RenderPass,render:function(e,t,n,o,r){var a=e.autoClear;e.autoClear=!1,this.scene.overrideMaterial=this.overrideMaterial;var s,i;this.clearColor&&(s=e.getClearColor().getHex(),i=e.getClearAlpha(),e.setClearColor(this.clearColor,this.clearAlpha)),this.clearDepth&&e.clearDepth(),e.render(this.scene,this.camera,this.renderToScreen?null:n,this.clear),this.clearColor&&e.setClearColor(s,i),this.scene.overrideMaterial=null,e.autoClear=a}}),THREE.ShaderPass=function(e,t){THREE.Pass.call(this),this.textureID=void 0!==t?t:"tDiffuse",e instanceof THREE.ShaderMaterial?(this.uniforms=e.uniforms,this.material=e):e&&(this.uniforms=THREE.UniformsUtils.clone(e.uniforms),this.material=new THREE.ShaderMaterial({defines:e.defines||{},uniforms:this.uniforms,vertexShader:e.vertexShader,fragmentShader:e.fragmentShader})),this.camera=new THREE.OrthographicCamera(-1,1,1,-1,0,1),this.scene=new THREE.Scene,this.quad=new THREE.Mesh(new THREE.PlaneBufferGeometry(2,2),null),this.quad.frustumCulled=!1,this.scene.add(this.quad)},THREE.ShaderPass.prototype=Object.assign(Object.create(THREE.Pass.prototype),{constructor:THREE.ShaderPass,render:function(e,t,n,o,r){this.uniforms[this.textureID]&&(this.uniforms[this.textureID].value=n.texture),this.quad.material=this.material,this.renderToScreen?e.render(this.scene,this.camera):e.render(this.scene,this.camera,t,this.clear)}}),THREE.CopyShader={uniforms:{tDiffuse:{value:null},opacity:{value:1}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform float opacity;","uniform sampler2D tDiffuse;","varying vec2 vUv;","void main() {","vec4 texel = texture2D( tDiffuse, vUv );","gl_FragColor = opacity * texel;","}"].join("\n")},THREE.DigitalGlitch={uniforms:{tDiffuse:{value:null},tDisp:{value:null},byp:{value:0},amount:{value:.08},angle:{value:.02},seed:{value:.02},seed_x:{value:.02},seed_y:{value:.02},distortion_x:{value:.5},distortion_y:{value:.6},col_s:{value:.05}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform int byp;","uniform sampler2D tDiffuse;","uniform sampler2D tDisp;","uniform float amount;","uniform float angle;","uniform float seed;","uniform float seed_x;","uniform float seed_y;","uniform float distortion_x;","uniform float distortion_y;","uniform float col_s;","varying vec2 vUv;","float rand(vec2 co){","return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);","}","void main() {","if(byp<1) {","vec2 p = vUv;","float xs = floor(gl_FragCoord.x / 0.5);","float ys = floor(gl_FragCoord.y / 0.5);","vec4 normal = texture2D (tDisp, p*seed*seed);","if(p.y<distortion_x+col_s && p.y>distortion_x-col_s*seed) {","if(seed_x>0.){","p.y = 1. - (p.y + distortion_y);","}","else {","p.y = distortion_y;","}","}","if(p.x<distortion_y+col_s && p.x>distortion_y-col_s*seed) {","if(seed_y>0.){","p.x=distortion_x;","}","else {","p.x = 1. - (p.x + distortion_x);","}","}","p.x+=normal.x*seed_x*(seed/5.);","p.y+=normal.y*seed_y*(seed/5.);","vec2 offset = amount * vec2( cos(angle), sin(angle));","vec4 cr = texture2D(tDiffuse, p + offset);","vec4 cga = texture2D(tDiffuse, p);","vec4 cb = texture2D(tDiffuse, p - offset);","gl_FragColor = vec4(cr.r, cga.g, cb.b, cga.a);","vec4 snow = 200.*amount*vec4(rand(vec2(xs * seed,ys * seed*50.))*0.2);","gl_FragColor = gl_FragColor+ snow;","}","else {","gl_FragColor=texture2D (tDiffuse, vUv);","}","}"].join("\n")},THREE.HorizontalBlurShader={uniforms:{tDiffuse:{value:null},h:{value:1/512}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform sampler2D tDiffuse;","uniform float h;","varying vec2 vUv;","void main() {","vec4 sum = vec4( 0.0 );","sum += texture2D( tDiffuse, vec2( vUv.x - 4.0 * h, vUv.y ) ) * 0.051;","sum += texture2D( tDiffuse, vec2( vUv.x - 3.0 * h, vUv.y ) ) * 0.0918;","sum += texture2D( tDiffuse, vec2( vUv.x - 2.0 * h, vUv.y ) ) * 0.12245;","sum += texture2D( tDiffuse, vec2( vUv.x - 1.0 * h, vUv.y ) ) * 0.1531;","sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;","sum += texture2D( tDiffuse, vec2( vUv.x + 1.0 * h, vUv.y ) ) * 0.1531;","sum += texture2D( tDiffuse, vec2( vUv.x + 2.0 * h, vUv.y ) ) * 0.12245;","sum += texture2D( tDiffuse, vec2( vUv.x + 3.0 * h, vUv.y ) ) * 0.0918;","sum += texture2D( tDiffuse, vec2( vUv.x + 4.0 * h, vUv.y ) ) * 0.051;","gl_FragColor = sum;","}"].join("\n")},THREE.VerticalBlurShader={uniforms:{tDiffuse:{value:null},v:{value:1/512}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform sampler2D tDiffuse;","uniform float v;","varying vec2 vUv;","void main() {","vec4 sum = vec4( 0.0 );","sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 4.0 * v ) ) * 0.051;","sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 3.0 * v ) ) * 0.0918;","sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 2.0 * v ) ) * 0.12245;","sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 1.0 * v ) ) * 0.1531;","sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;","sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 1.0 * v ) ) * 0.1531;","sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 2.0 * v ) ) * 0.12245;","sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 3.0 * v ) ) * 0.0918;","sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 4.0 * v ) ) * 0.051;","gl_FragColor = sum;","}"].join("\n")};